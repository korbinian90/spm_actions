name: Build Matlab Standalone
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

env:
  MLM_LICENSE_TOKEN: ${{ secrets.MATLAB_BATCH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  build_matlab_standalone:
    name: Build Matlab Standalone
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: ["latest"] #["R2021a", "R2021b", "R2022a", "R2022b", "R2023a", "R2023b", "R2024a", "R2024b"]
        os: ["ubuntu-latest"] #, "macos-13", "macos-latest", "windows-latest"] # macos-13 has Intel architecture, macos-latest has Apple Silicon
        include:
          - os: ubuntu-latest
            os_name: Linux
          - os: macos-13
            os_name: macOS_Intel
          - os: macos-latest
            os_name: macOS_Apple_Silicon
          - os: windows-latest
            os_name: Windows
        exclude:
          - os: windows-latest
            version: "R2021a" # Compiler not available
          - os: windows-latest
            version: "R2021b" # Compiler not available
          - os: macos-latest
            version: "R2021a" # Apple Silicon version not available
          - os: macos-latest
            version: "R2021b" # Apple Silicon version not available
          - os: macos-latest
            version: "R2022a" # Apple Silicon version not available
          - os: macos-latest
            version: "R2022b" # Apple Silicon version not available
          - os: macos-latest
            version: "R2023a" # Apple Silicon version not available

    steps:
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{matrix.version}}
          products: MATLAB_Compiler
      
      - name: Get MATLAB Version
        run: |
          matlab_version=$(matlab -batch "disp(version('-release'))")
          echo "MATLAB Version Installed: $matlab_version"
          echo "MATLAB_VERSION=$matlab_version" >> $GITHUB_ENV

      - name: Checkout SPM
        uses: actions/checkout@v4
        with:
          repository: spm/spm

      # Step to create MATLAB executable path for Linux environments
      - name: Create MATLAB Executable Path
        if: ${{ runner.os == 'Linux' }} # This step runs only on Linux
        run: |
          matlab_executable=$(which matlab)
          matlab_base_path=$(dirname "$matlab_executable")
          glnxa64_path="${matlab_base_path}/glnxa64"
          glnxa64_os_path="${matlab_base_path}/../sys/os/glnxa64"
          # echo "LD_LIBRARY_PATH=${glnxa64_path}:${glnxa64_os_path}:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          # echo "LD_PRELOAD=${glnxa64_os_path}/libstdc++.so.6" >> $GITHUB_ENV

      # 1) Add SPM with subfolders to the path 2) Run spm_make_standalone in matlab
      - name: Build Matlab Standalone
        uses: matlab-actions/run-command@v2
        with:
          command: |
            disp(getenv('LD_LIBRARY_PATH'))
            disp(getenv('LD_PRELOAD'))
            addpath(genpath('.'));
            savepath;
            spm_make_standalone
            
      - name: Verify Linking
        if: ${{ runner.os == 'Linux' }}
        run: |
          ldd ../standalone/spm12 | grep libstdc++

      # Compress to tar.gz or zip
      - name: Compress Unix
        if: ${{ runner.os != 'Windows' }}
        run: |
          mv ../standalone spm_${{ github.ref_name }}_${{ matrix.os_name }}_${{ ENV.MATLAB_VERSION }}
          zip -r spm_${{ github.ref_name }}_${{ ENV.MATLAB_VERSION }}_${{ matrix.version }}.zip spm_${{ github.ref_name }}_${{ matrix.os_name }}_${{ matrix.version }}

      - name: Compress Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          Compress-Archive -Path '../standalone/*' -DestinationPath 'spm_${{ github.ref_name }}_${{ matrix.os_name }}_${{ matrix.version }}.zip'
          
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: spm*.zip
